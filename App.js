import React, { useState } from 'react';
import { 
  View, 
  Text, 
  TextInput, 
  TouchableOpacity, 
  StyleSheet, 
  ScrollView,
  StatusBar
} from 'react-native';

export default function KrishiSakhiApp() {
  const [currentPage, setCurrentPage] = useState('language'); // 'language' or 'registration'
  const [selectedLanguage, setSelectedLanguage] = useState('');
  const [showLanguageDropdown, setShowLanguageDropdown] = useState(false);

  const languages = [
    { code: 'en', name: 'English', native: 'English' },
    { code: 'ml', name: 'Malayalam', native: '‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç' },
    { code: 'hi', name: 'Hindi', native: '‡§π‡§ø‡§Ç‡§¶‡•Ä' },
    { code: 'ta', name: 'Tamil', native: '‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç' },
    { code: 'kn', name: 'Kannada', native: '‡≤ï‡≤®‡≥ç‡≤®‡≤°' },
  ];

  const translations = {
    en: {
      welcome: "Welcome to",
      appName: "Krishi Sakhi",
      tagline: "Your Farming Friend",
      selectLanguage: "Select Your Language",
      continue: "Continue",
      hello: "Hello Farmer! üëã",
      registerMessage: "Your trusted farming companion is here to help you grow!",
      name: "Your Name",
      location: "Village/District",
      crop: "Main Crop",
      soilType: "Soil Type",
      irrigation: "Irrigation Method",
      farmSize: "Farm Size (acres)",
      register: "Register Now",
      backToLanguage: "Change Language"
    },
    ml: {
      welcome: "‡¥∏‡µç‡¥µ‡¥æ‡¥ó‡¥§‡¥Ç",
      appName: "‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥ñ‡¥ø",
      tagline: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡µÅ‡¥π‡µÉ‡¥§‡µç‡¥§‡µç",
      selectLanguage: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥≠‡¥æ‡¥∑ ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï",
      continue: "‡¥§‡µÅ‡¥ü‡¥∞‡µÅ‡¥ï",
      hello: "‡¥®‡¥Æ‡¥∏‡µç‡¥ï‡¥æ‡¥∞‡¥Ç ‡¥ï‡µÉ‡¥∑‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥∞‡µá! üëã",
      registerMessage: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥µ‡¥ø‡¥∂‡µç‡¥µ‡¥∏‡µç‡¥§ ‡¥ï‡µÉ‡¥∑‡¥ø ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø ‡¥á‡¥µ‡¥ø‡¥ü‡µÜ ‡¥µ‡¥≥‡¥∞‡¥æ‡µª ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡µª!",
      name: "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥™‡µá‡¥∞‡µç",
      location: "‡¥ó‡µç‡¥∞‡¥æ‡¥Æ‡¥Ç/‡¥ú‡¥ø‡¥≤‡µç‡¥≤",
      crop: "‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥® ‡¥µ‡¥ø‡¥≥",
      soilType: "‡¥Æ‡¥£‡µç‡¥£‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥§‡¥∞‡¥Ç",
      irrigation: "‡¥ú‡¥≤‡¥∏‡µá‡¥ö‡¥® ‡¥∞‡µÄ‡¥§‡¥ø",
      farmSize: "‡¥ï‡µÉ‡¥∑‡¥ø‡¥≠‡µÇ‡¥Æ‡¥ø (‡¥è‡¥ï‡µç‡¥ï‡µº)",
      register: "‡¥á‡¥™‡µç‡¥™‡µã‡µæ ‡¥∞‡¥ú‡¥ø‡¥∏‡µç‡¥±‡µç‡¥±‡µº ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥ï",
      backToLanguage: "‡¥≠‡¥æ‡¥∑ ‡¥Æ‡¥æ‡¥±‡µç‡¥±‡µÅ‡¥ï"
    },
    hi: {
      welcome: "‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à",
      appName: "‡§ï‡•É‡§∑‡§ø ‡§∏‡§ñ‡•Ä",
      tagline: "‡§Ü‡§™‡§ï‡§æ ‡§ñ‡•á‡§§‡•Ä ‡§Æ‡§ø‡§§‡•ç‡§∞",
      selectLanguage: "‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç",
      continue: "‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç",
      hello: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á ‡§ï‡§ø‡§∏‡§æ‡§® ‡§≠‡§æ‡§à! üëã",
      registerMessage: "‡§Ü‡§™‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø ‡§ñ‡•á‡§§‡•Ä ‡§∏‡§æ‡§•‡•Ä ‡§Ø‡§π‡§æ‡§Å ‡§¨‡§¢‡§º‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à!",
      name: "‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ",
      location: "‡§ó‡§æ‡§Ç‡§µ/‡§ú‡§ø‡§≤‡§æ",
      crop: "‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§´‡§∏‡§≤",
      soilType: "‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞",
      irrigation: "‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§µ‡§ø‡§ß‡§ø",
      farmSize: "‡§ñ‡•á‡§§ ‡§ï‡§æ ‡§Ü‡§ï‡§æ‡§∞ (‡§è‡§ï‡§°‡§º)",
      register: "‡§Ö‡§≠‡•Ä ‡§™‡§Ç‡§ú‡•Ä‡§ï‡•É‡§§ ‡§ï‡§∞‡•á‡§Ç",
      backToLanguage: "‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç"
    },
    ta: {
      welcome: "‡Æµ‡Æ∞‡Æµ‡Øá‡Æ±‡Øç‡Æï‡Æø‡Æ±‡Øã‡ÆÆ‡Øç",
      appName: "‡Æï‡Æø‡Æ∞‡ØÅ‡Æ∑‡Æø ‡Æö‡Æï‡Æø",
      tagline: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æµ‡Æø‡Æµ‡Æö‡Ææ‡ÆØ ‡Æ®‡Æ£‡Øç‡Æ™‡Æ∞‡Øç",
      selectLanguage: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Øä‡Æ¥‡Æø‡ÆØ‡Øà‡Æ§‡Øç ‡Æ§‡Øá‡Æ∞‡Øç‡Æ®‡Øç‡Æ§‡ØÜ‡Æü‡ØÅ‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç",
      continue: "‡Æ§‡Øä‡Æü‡Æ∞‡Æµ‡ØÅ‡ÆÆ‡Øç",
      hello: "‡Æµ‡Æ£‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡Æµ‡Æø‡Æµ‡Æö‡Ææ‡ÆØ‡Æø! üëã",
      registerMessage: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ®‡ÆÆ‡Øç‡Æ™‡Æï‡ÆÆ‡Ææ‡Æ© ‡Æµ‡Æø‡Æµ‡Æö‡Ææ‡ÆØ ‡Æ§‡ØÅ‡Æ£‡Øà ‡Æá‡Æô‡Øç‡Æï‡Øá ‡Æµ‡Æ≥‡Æ∞ ‡Æâ‡Æ§‡Æµ!",
      name: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ™‡ØÜ‡ÆØ‡Æ∞‡Øç",
      location: "‡Æï‡Æø‡Æ∞‡Ææ‡ÆÆ‡ÆÆ‡Øç/‡ÆÆ‡Ææ‡Æµ‡Æü‡Øç‡Æü‡ÆÆ‡Øç",
      crop: "‡ÆÆ‡ØÅ‡Æï‡Øç‡Æï‡Æø‡ÆØ ‡Æ™‡ÆØ‡Æø‡Æ∞‡Øç",
      soilType: "‡ÆÆ‡Æ£‡Øç‡Æ£‡Æø‡Æ©‡Øç ‡Æµ‡Æï‡Øà",
      irrigation: "‡Æ®‡ØÄ‡Æ∞‡Øç‡Æ™‡Øç‡Æ™‡Ææ‡Æö‡Æ© ‡ÆÆ‡ØÅ‡Æ±‡Øà",
      farmSize: "‡Æ™‡Æ£‡Øç‡Æ£‡Øà ‡ÆÖ‡Æ≥‡Æµ‡ØÅ (‡Æè‡Æï‡Øç‡Æï‡Æ∞‡Øç)",
      register: "‡Æá‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ ‡Æ™‡Æ§‡Æø‡Æµ‡ØÅ ‡Æö‡ØÜ‡ÆØ‡Øç‡ÆØ‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç",
      backToLanguage: "‡ÆÆ‡Øä‡Æ¥‡Æø ‡ÆÆ‡Ææ‡Æ±‡Øç‡Æ±‡ØÅ"
    },
    kn: {
      welcome: "‡≤∏‡≥ç‡≤µ‡≤æ‡≤ó‡≤§",
      appName: "‡≤ï‡≥É‡≤∑‡≤ø ‡≤∏‡≤ñ‡≤ø",
      tagline: "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤ï‡≥É‡≤∑‡≤ø ‡≤∏‡≥ç‡≤®‡≥á‡≤π‡≤ø‡≤§",
      selectLanguage: "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤≠‡≤æ‡≤∑‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü‡≤Æ‡≤æ‡≤°‡≤ø",
      continue: "‡≤Æ‡≥Å‡≤Ç‡≤¶‡≥Å‡≤µ‡≤∞‡≤ø‡≤∏‡≤ø",
      hello: "‡≤®‡≤Æ‡≤∏‡≥ç‡≤ï‡≤æ‡≤∞ ‡≤∞‡≥à‡≤§‡≤∞‡≥á! üëã",
      registerMessage: "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤µ‡≤ø‡≤∂‡≥ç‡≤µ‡≤æ‡≤∏‡≤æ‡≤∞‡≥ç‡≤π ‡≤ï‡≥É‡≤∑‡≤ø ‡≤∏‡≤π‡≤æ‡≤Ø‡≤ï ‡≤á‡≤≤‡≥ç‡≤≤‡≤ø ‡≤¨‡≥Ü‡≤≥‡≥Ü‡≤Ø‡≤≤‡≥Å ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≤≤‡≥Å!",
      name: "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤π‡≥Ü‡≤∏‡≤∞‡≥Å",
      location: "‡≤ó‡≥ç‡≤∞‡≤æ‡≤Æ/‡≤ú‡≤ø‡≤≤‡≥ç‡≤≤‡≥Ü",
      crop: "‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø ‡≤¨‡≥Ü‡≤≥‡≥Ü",
      soilType: "‡≤Æ‡≤£‡≥ç‡≤£‡≤ø‡≤® ‡≤™‡≥ç‡≤∞‡≤ï‡≤æ‡≤∞",
      irrigation: "‡≤®‡≥Ä‡≤∞‡≤æ‡≤µ‡≤∞‡≤ø ‡≤µ‡≤ø‡≤ß‡≤æ‡≤®",
      farmSize: "‡≤´‡≤æ‡≤∞‡≥ç‡≤Æ‡≥ç ‡≤ó‡≤æ‡≤§‡≥ç‡≤∞ (‡≤é‡≤ï‡≤∞‡≥Ü)",
      register: "‡≤à‡≤ó ‡≤®‡≥ã‡≤Ç‡≤¶‡≤æ‡≤Ø‡≤ø‡≤∏‡≤ø",
      backToLanguage: "‡≤≠‡≤æ‡≤∑‡≥Ü ‡≤¨‡≤¶‡≤≤‡≤æ‡≤Ø‡≤ø‡≤∏‡≤ø"
    }
  };

  const currentLang = translations[selectedLanguage] || translations.en;

  const handleLanguageSelect = (langCode) => {
    setSelectedLanguage(langCode);
    setShowLanguageDropdown(false);
  };

  const handleContinue = () => {
    if (selectedLanguage) {
      setCurrentPage('registration');
    }
  };

  const LanguageSelectionPage = () => (
    <View style={styles.languageContainer}>
      <StatusBar barStyle="light-content" backgroundColor="#2E7D32" />
      
      {/* Header with gradient effect */}
      <View style={styles.languageHeader}>
        <Text style={styles.welcomeText}>{currentLang.welcome}</Text>
        <Text style={styles.appTitle}>{currentLang.appName}</Text>
        <Text style={styles.subtitle}>üåæ {currentLang.tagline} üåæ</Text>
      </View>

      <View style={styles.languageContent}>
        <Text style={styles.selectLanguageText}>{currentLang.selectLanguage}</Text>
        
        <TouchableOpacity 
          style={styles.languageDropdown}
          onPress={() => setShowLanguageDropdown(!showLanguageDropdown)}
        >
          <Text style={styles.languageDropdownText}>
            {selectedLanguage ? 
              `${languages.find(l => l.code === selectedLanguage)?.native} (${languages.find(l => l.code === selectedLanguage)?.name})` : 
              'Choose Language / ‡¥≠‡¥æ‡¥∑ ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥ï'
            }
          </Text>
          <Text style={styles.dropdownArrow}>‚ñº</Text>
        </TouchableOpacity>

        {showLanguageDropdown && (
          <View style={styles.languageOptions}>
            {languages.map((lang) => (
              <TouchableOpacity
                key={lang.code}
                style={styles.languageOption}
                onPress={() => handleLanguageSelect(lang.code)}
              >
                <Text style={styles.languageOptionText}>
                  {lang.native} ({lang.name})
                </Text>
              </TouchableOpacity>
            ))}
          </View>
        )}

        {selectedLanguage && (
          <TouchableOpacity 
            style={styles.continueButton}
            onPress={handleContinue}
          >
            <Text style={styles.continueButtonText}>{currentLang.continue}</Text>
          </TouchableOpacity>
        )}
      </View>
    </View>
  );

  const RegistrationPage = () => (
    <View style={styles.safeArea}>
      <StatusBar barStyle="light-content" backgroundColor="#2E7D32" />
      
      {/* Header */}
      <View style={styles.registrationHeader}>
        <TouchableOpacity 
          style={styles.backButton}
          onPress={() => setCurrentPage('language')}
        >
          <Text style={styles.backButtonText}>‚Üê {currentLang.backToLanguage}</Text>
        </TouchableOpacity>
        <Text style={styles.appTitleSmall}>{currentLang.appName}</Text>
      </View>

      <ScrollView 
        contentContainerStyle={styles.container}
        showsVerticalScrollIndicator={false}
      >
        <View style={styles.welcomeSection}>
          <Text style={styles.helloText}>{currentLang.hello}</Text>
          <Text style={styles.registerMessage}>{currentLang.registerMessage}</Text>
        </View>
        
        <View style={styles.formSection}>
          <TextInput 
            placeholder={currentLang.name}
            style={styles.input} 
            placeholderTextColor="#777"
            autoCapitalize="words"
            autoCorrect={false}
          />
          
          <TextInput 
            placeholder={currentLang.location}
            style={styles.input} 
            placeholderTextColor="#777"
            autoCapitalize="words"
            autoCorrect={false}
          />
          
          <TextInput 
            placeholder={currentLang.crop}
            style={styles.input} 
            placeholderTextColor="#777"
            autoCapitalize="words"
            autoCorrect={false}
          />
          
          <TextInput 
            placeholder={currentLang.soilType}
            style={styles.input} 
            placeholderTextColor="#777"
            autoCapitalize="words"
            autoCorrect={false}
          />
          
          <TextInput 
            placeholder={currentLang.irrigation}
            style={styles.input} 
            placeholderTextColor="#777"
            autoCapitalize="words"
            autoCorrect={false}
          />

          <TextInput 
            placeholder={currentLang.farmSize}
            style={styles.input} 
            placeholderTextColor="#777"
            keyboardType="numeric"
            autoCorrect={false}
          />
          
          <TouchableOpacity 
            style={styles.registerButton}
            activeOpacity={0.8}
          >
            <Text style={styles.registerButtonText}>{currentLang.register}</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </View>
  );

  return currentPage === 'language' ? <LanguageSelectionPage /> : <RegistrationPage />;
}

const styles = StyleSheet.create({
  // Language Selection Styles
  languageContainer: {
    flex: 1,
    backgroundColor: '#E8F5E8',
  },
  languageHeader: {
    backgroundColor: '#2E7D32',
    paddingTop: 60,
    paddingBottom: 40,
    paddingHorizontal: 20,
    alignItems: 'center',
    borderBottomLeftRadius: 30,
    borderBottomRightRadius: 30,
  },
  welcomeText: {
    fontSize: 18,
    color: '#FFFFFF',
    marginBottom: 5,
    fontWeight: '300',
  },
  appTitle: {
    fontSize: 36,
    color: '#FFFFFF',
    fontWeight: 'bold',
    marginBottom: 10,
  },
  subtitle: {
    fontSize: 16,
    color: '#C8E6C9',
    fontStyle: 'italic',
  },
  languageContent: {
    flex: 1,
    paddingHorizontal: 20,
    paddingTop: 40,
    alignItems: 'center',
  },
  selectLanguageText: {
    fontSize: 22,
    color: '#2E7D32',
    fontWeight: 'bold',
    marginBottom: 30,
    textAlign: 'center',
  },
  languageDropdown: {
    width: '100%',
    backgroundColor: '#FFFFFF',
    borderRadius: 15,
    borderWidth: 2,
    borderColor: '#4CAF50',
    paddingHorizontal: 20,
    paddingVertical: 18,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 10,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 3 },
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 5,
  },
  languageDropdownText: {
    fontSize: 16,
    color: '#333',
    fontWeight: '500',
    flex: 1,
  },
  dropdownArrow: {
    fontSize: 12,
    color: '#4CAF50',
  },
  languageOptions: {
    width: '100%',
    backgroundColor: '#FFFFFF',
    borderRadius: 10,
    borderWidth: 1,
    borderColor: '#E0E0E0',
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 4,
  },
  languageOption: {
    paddingHorizontal: 20,
    paddingVertical: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  languageOptionText: {
    fontSize: 16,
    color: '#333',
  },
  continueButton: {
    backgroundColor: '#4CAF50',
    paddingHorizontal: 50,
    paddingVertical: 16,
    borderRadius: 25,
    marginTop: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 6,
    elevation: 6,
  },
  continueButtonText: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: 'bold',
    textAlign: 'center',
  },

  // Registration Page Styles
  safeArea: {
    flex: 1,
    backgroundColor: '#F1F8E9',
  },
  registrationHeader: {
    backgroundColor: '#2E7D32',
    paddingTop: 50,
    paddingBottom: 20,
    paddingHorizontal: 20,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
  },
  backButton: {
    padding: 5,
  },
  backButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
  },
  appTitleSmall: {
    fontSize: 24,
    color: '#FFFFFF',
    fontWeight: 'bold',
  },
  container: {
    flexGrow: 1,
    padding: 20,
    paddingBottom: 40,
  },
  welcomeSection: {
    alignItems: 'center',
    marginBottom: 30,
    backgroundColor: '#FFFFFF',
    padding: 25,
    borderRadius: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 3 },
    shadowOpacity: 0.1,
    shadowRadius: 6,
    elevation: 5,
  },
  helloText: {
    fontSize: 26,
    color: '#2E7D32',
    fontWeight: 'bold',
    marginBottom: 10,
    textAlign: 'center',
  },
  registerMessage: {
    fontSize: 16,
    color: '#555',
    textAlign: 'center',
    lineHeight: 22,
  },
  formSection: {
    flex: 1,
  },
  input: {
    width: '100%',
    height: 55,
    borderColor: '#4CAF50',
    borderWidth: 2,
    borderRadius: 12,
    paddingHorizontal: 16,
    fontSize: 16,
    marginVertical: 8,
    backgroundColor: '#FFFFFF',
    color: '#333',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  registerButton: {
    backgroundColor: '#4CAF50',
    paddingVertical: 16,
    paddingHorizontal: 50,
    borderRadius: 25,
    marginTop: 25,
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.2,
    shadowRadius: 6,
    elevation: 6,
  },
  registerButtonText: {
    color: '#FFFFFF',
    fontSize: 18,
    fontWeight: 'bold',
  },
});